{"Name":"Ping","Description":"Connectivity / API Key check.","Script":"from constants import USER_AGENT\nfrom datetime import datetime\nfrom greynoise import GreyNoise\nfrom greynoise.exceptions import RequestFailure\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import output_handler\n\nINTEGRATION_NAME = \"GreyNoise\"\n\nSCRIPT_NAME = \"Ping\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n\n    api_key = siemplify.extract_configuration_param(\n        provider_name=INTEGRATION_NAME, param_name=\"GN API Key\"\n    )\n\n    session = GreyNoise(api_key=api_key, integration_name=USER_AGENT)\n    result_value = True\n    status = EXECUTION_STATE_COMPLETED\n    try:\n        res = session.test_connection()\n        expires = datetime.strptime(res[\"expiration\"], '%Y-%m-%d')\n        now = datetime.today()\n        print(now, expires)\n        if res[\"offering\"] != \"community\" and expires > now:\n            # is valid enterprise api key\n            siemplify.LOGGER.info(\"Connectivy Response: {}\".format(res))\n            output_message = \"Successful Connection\"\n        elif res[\"offering\"] != \"community\" and expires < now:\n            # is expired enterprise api key\n            siemplify.LOGGER.info(\"Unable to auth, API Key appears to be expired\")\n            output_message = \"Unable to auth, API Key appears to be expired\"\n            result_value = False\n            status = EXECUTION_STATE_FAILED\n        else:\n            # is a community api key\n            siemplify.LOGGER.info(\"Connectivy Response: {}\".format(res))\n            output_message = \"Successful Connection\"\n    \n    except RequestFailure as e:\n        siemplify.LOGGER.info(\"Unable to auth, please check API Key\")\n        output_message = \"Unable to auth, please check API Key\"\n        result_value = False\n        status = EXECUTION_STATE_FAILED\n        \n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"GreyNoise","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"Admin","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":19.0,"TimeoutSeconds":300,"IsAsync":false,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}