{
  "Name": "Context IP Lookup",
  "Description": "Query an IP in the GreyNoise Dataset.",
  "Script": "import requests\nfrom constants import CODE_MESSAGES\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyDataModel import EntityTypes\nfrom SiemplifyUtils import convert_dict_to_json_result_dict, output_handler\n\nINTEGRATION_NAME = \"GreyNoise\"\n\nSCRIPT_NAME = \"Context IP Lookup\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n\n    api_key = siemplify.extract_configuration_param(\n        provider_name=INTEGRATION_NAME, param_name=\"GN API Key\"\n    )\n\n    headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"key\": api_key,\n        \"User-Agent\": \"siemplify-v1.0.0\",\n    }\n\n    ips = [\n        entity\n        for entity in siemplify.target_entities\n        if entity.entity_type == EntityTypes.ADDRESS\n    ]\n\n    output_message = \"Successfully processed: \"\n    result_value = True\n    status = EXECUTION_STATE_COMPLETED\n    output_json = {}\n    quick_url = \"https://api.greynoise.io/v2/noise/quick/\"\n    context_url = \"https://api.greynoise.io/v2/noise/context/\"\n    for ipaddr in ips:\n        siemplify.LOGGER.info(\"Started processing IP: {}\".format(ipaddr))\n        url = f\"{quick_url}{ipaddr}\"\n\n        res = requests.get(url, headers=headers)\n\n        if res.status_code == 200 and res.json()[\"noise\"]:\n\n            url = f\"{context_url}{ipaddr}\"\n            res = requests.get(url, headers=headers)\n\n            siemplify.result.add_json(str(ipaddr), res.json())\n\n            output = res.json()\n\n            output_json[str(ipaddr)] = output\n\n            siemplify.add_entity_insight(\n                ipaddr, to_insight(output), triggered_by=INTEGRATION_NAME\n            )\n\n            output_message = output_message + \"{},\".format(ipaddr)\n\n        elif res.status_code == 401:\n            output_message = \"Unable to auth, please check API Key\"\n            result_value = False\n            status = EXECUTION_STATE_FAILED\n            siemplify.end(output_message, result_value, status)\n\n        else:\n            output = res.json()\n            output['message'] = CODE_MESSAGES[output['code']]\n            siemplify.result.add_json(str(ipaddr), output)\n\n            output_json[str(ipaddr)] = output\n\n    if output_json:\n        siemplify.result.add_result_json(\n            {\"results\": convert_dict_to_json_result_dict(output_json)}\n        )\n\n    siemplify.end(output_message, result_value, status)\n\n\ndef to_insight(self):\n    content = \"\"\n    content += \"<table style='100%'><tbody>\"\n    content += (\n        \"<tr><td style='text-align: left; width: 30%;'><strong style='font-size: 17px'>\"\n        \"Noise: <span>{noise}</span></strong></td>\".format(noise=self[\"seen\"])\n    )\n    content += \"</tbody></table><br>\"\n    content += \"<table style='100%'><tbody>\"\n    content += (\n        \"<tr><td style='text-align: left; width: 30%;'><strong>Classification: </strong>\"\n        \"</td><td style='text-align: left; width: 30%;'>{classification}</td>\"\n        \"</tr>\".format(classification=self[\"classification\"])\n    )\n    content += (\n        \"<tr><td style='text-align: left; width: 30%;'><strong>Last Seen: </strong></td>\"\n        \"<td style='text-align: left; width: 30%;'>{last_seen}</td></tr>\".format(\n            last_seen=self[\"last_seen\"]\n        )\n    )\n    content += (\n        \"<tr><td style='text-align: left; width: 30%;'><strong>Organization: </strong>\"\n        \"</td><td style='text-align: left; width: 30%;'>{organization}</td></tr>\".format(\n            organization=self[\"metadata\"][\"organization\"]\n        )\n    )\n    content += (\n        \"<tr><td style='text-align: left; width: 30%;'><strong>Country: </strong></td>\"\n        \"<td style='text-align: left; width: 30%;'>{organization}</td></tr>\".format(\n            organization=self[\"metadata\"][\"country\"]\n        )\n    )\n    content += \"</tbody></table><br><br>\"\n    content += (\n        '<p><strong>More Info: <a target=\"_blank\" href=https://viz.greynoise.io/riot/'\n        \"{ip}>https://viz.greynoise.io/ip/{ip}</a></strong>&nbsp; </p>\".format(\n            ip=self[\"ip\"]\n        )\n    )\n\n    return content\n\n\nif __name__ == \"__main__\":\n    main()\n",
  "IntegrationIdentifier": "GreyNoise",
  "ScriptResultName": "success",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "{}",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 14.0,
  "TimeoutSeconds": 300,
  "Parameters": [],
  "DefaultResultValue": "",
  "PythonVersion": "None",
  "SimulationData": {
    "Entities": null
  },
  "SimulationDataJson": null,
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1612214806802,
  "ModificationTimeUnixTimeInMs": 1612214806804
}