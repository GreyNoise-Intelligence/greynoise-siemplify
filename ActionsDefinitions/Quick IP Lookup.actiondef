{"Name":"Quick IP Lookup","Description":"Perform a Quick IP lookup in GreyNoise. Consumes 1 Search per valid IP submitted.","Script":"from constants import USER_AGENT\nfrom greynoise import GreyNoise\nfrom greynoise.exceptions import RateLimitError, RequestFailure\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyDataModel import EntityTypes\nfrom SiemplifyUtils import convert_dict_to_json_result_dict, output_handler\n\nINTEGRATION_NAME = \"GreyNoise\"\n\nSCRIPT_NAME = \"Quick IP Lookup\"\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n\n    api_key = siemplify.extract_configuration_param(\n        provider_name=INTEGRATION_NAME, param_name=\"GN API Key\"\n    )\n\n    session = GreyNoise(api_key=api_key, integration_name=USER_AGENT)\n\n    ips = [\n        entity for entity in siemplify.target_entities if entity.entity_type == EntityTypes.ADDRESS\n    ]\n\n    output_message = \"Successfully processed:\"\n    result_value = True\n    status = EXECUTION_STATE_COMPLETED\n    output_json = {}\n    invalid_ips = []\n    for ipaddr in ips:\n        siemplify.LOGGER.info(\"Started processing IP: {}\".format(ipaddr))\n\n        try:\n            res = session.quick(str(ipaddr))\n\n            if len(res) >= 1:\n                output = res[0]\n                siemplify.result.add_json(str(ipaddr), output)\n                output[\"noise\"] = True\n                output_json[str(ipaddr)] = output\n\n                output_message = output_message + \" {},\".format(str(ipaddr))\n            else:\n                siemplify.LOGGER.info(\"Invalid Routable IP: {}\".format(ipaddr))\n                invalid_ips.append(ipaddr)\n\n        except ValueError as e:\n            siemplify.LOGGER.info(\"Invalid Routable IP: {}\".format(ipaddr))\n            invalid_ips.append(ipaddr)\n            continue\n\n        except RequestFailure as e:\n            siemplify.LOGGER.info(\"Unable to auth, please check API Key\")\n            output_message = \"Unable to auth, please check API Key\"\n            result_value = False\n            status = EXECUTION_STATE_FAILED\n            break\n\n        except RateLimitError as e:\n            siemplify.LOGGER.info(\"Daily rate limit reached, please check API Key\")\n            output_message = \"Daily rate limit reached, please check API Key\"\n            result_value = False\n            status = EXECUTION_STATE_FAILED\n            break\n\n        except Exception as e:\n            print(e)\n            siemplify.LOGGER.info(\"Unknown Error Occurred\")\n            output_message = \"Unknown Error Occurred\"\n            result_value = False\n            status = EXECUTION_STATE_FAILED\n            break\n\n    if output_json:\n        siemplify.result.add_result_json({\"results\": convert_dict_to_json_result_dict(output_json)})\n\n    if invalid_ips and result_value:\n        invalid_ips_string = \"\"\n        for item in invalid_ips:\n            if invalid_ips_string == \"\":\n                invalid_ips_string = str(item)\n            else:\n                invalid_ips_string = invalid_ips_string + \", \" + str(item)\n        output_message = output_message + \" Invalid IPs skipped: {}\".format(invalid_ips_string)\n\n    siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n","IntegrationIdentifier":"GreyNoise","ScriptResultName":"success","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{\"results\": [{\"Entity\": \"8.8.8.8\", \"EntityResult\": [{\"code\": \"0x09\", \"ip\": \"8.8.8.8\", \"noise\": false, \"riot\": true, \"code_message\": \"IP was found in RIOT\"}]}]}","ShowResult":true}],"Creator":"Admin","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":29.0,"TimeoutSeconds":300,"IsAsync":false,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}